{"version":3,"sources":["utils/httpService.js","config/repoSearching.js","store/modules/repoSearching.js","store/modules/root.js","store/configureStore.js","utils/helper.js","components/DebounceInput.js","components/typography.js","containers/Header/HeaderStyledComps.js","containers/Header/Header.js","components/Loader.js","containers/SearchResults/SearchResultStyledComps.js","containers/SearchResults/ListItem.js","containers/SearchResults/InfiniteList.js","containers/SearchResults/SearchResults.js","containers/App.js","serviceWorker.js","index.js"],"names":["_get","url","urlParams","fetchUrl","Object","keys","forEach","key","replace","axios","get","DEFAULT_PAGE_SIZE","RESET_REPO_SEARCHING_DEFAULT","UPDATE_FETCHING_MASK","UPDATE_KEYWORD","UPDATE_LOADING_FLAG","UPDATE_PAGE_SIZE","UPDATE_REPO_LIST","UPDATE_TOTAL_COUNT","repoSearchingState","isFetchingMaskVisible","isLoading","keyword","pageSize","repoList","totalCount","createAction","rootEpic","combineEpics","action$","pipe","ofType","exhaustMap","action","concat","of","type","payload","from","q","store","getState","repoSearching","page","length","per_page","switchMap","response","data","items","total_count","catchError","error","appReducer","combineReducers","state","epicMiddleware","createEpicMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","applyMiddleware","logger","createStore","newStata","run","parseNumberwithCommas","num","toString","StyledDebounceInput","styled","DebounceInput","h1","h2","H3","h3","h4","HeaderWrapper","header","TotalCount","HeaderAnchor","a","Header","useSelector","dispatch","useDispatch","className","href","icon","faGithub","color","style","fontSize","minLength","placeholder","debounceTimeout","onChange","e","onSearchInputChange","target","value","StyledLoader","div","Loader","SearchResultsWrapper","section","SearchItem","Hr","hr","props","index","Anchor","Paragraph","p","FetchingMask","ListItem","rowData","_isEmpty","id","html_url","owner","login","name","description","InfiniteList","height","itemSize","width","onFetchNextPage","updateFetchingMask","allDataLoaded","itemCount","itemData","onScroll","_debounce","repoLength","scrollDirection","scrollOffset","scrollUpdateWasRequested","offsetIndex","Math","ceil","overscanCount","SearchResults","useEffect","wrapperHeight","document","querySelector","offsetHeight","isValidContent","searchResultsWrapperClass","classNames","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ca4dab6.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst _get = (url, urlParams) => {\n    let fetchUrl = url;\n    Object.keys(urlParams).forEach(key => {\n        fetchUrl = fetchUrl.replace(`{${key}}`, `${key}=${urlParams[key]}`);\n    });\n    return axios.get(fetchUrl);\n};\n\nexport default _get;\n","export const DEFAULT_PAGE_SIZE = 100;\n\nexport const ITEM_SIZE = 100;\n\nexport const GET_REPO_LSIT =\n    'https://api.github.com/search/repositories?{q}&{page}&{per_page}';\n","import { createAction } from 'redux-actions';\nimport { concat, from, of } from 'rxjs';\nimport { ofType } from 'redux-observable';\nimport { catchError, switchMap, exhaustMap } from 'rxjs/operators';\nimport _get from 'utils/httpService';\nimport store from 'store/configureStore';\nimport { DEFAULT_PAGE_SIZE, GET_REPO_LSIT } from 'config/repoSearching';\n\n/*\n * action types\n */\nexport const FETCH_REPO_DATA = 'FETCH_REPO_DATA';\nexport const GET_REPO_DATA = 'GET_REPO_DATA';\nexport const RESET_REPO_SEARCHING_DEFAULT = 'RESET_REPO_SEARCHING_DEFAULT';\nexport const SEARCH_REPO_DATA = 'SEARCH_REPO_DATA';\nexport const UPDATE_FETCHING_MASK = 'UPDATE_FETCHING_MASK';\nexport const UPDATE_KEYWORD = 'UPDATE_KEYWORD';\nexport const UPDATE_LOADING_FLAG = 'UPDATE_LOADING_FLAG';\nexport const UPDATE_PAGE_SIZE = 'UPDATE_PAGE_SIZE';\nexport const UPDATE_REPO_LIST = 'UPDATE_REPO_LIST';\nexport const UPDATE_TOTAL_COUNT = 'UPDATE_TOTAL_COUNT';\n\n/*\n * initial state\n */\nexport const repoSearchingState = {\n    isFetchingMaskVisible: false,\n    isLoading: false,\n    keyword: '',\n    pageSize: DEFAULT_PAGE_SIZE,\n    repoList: [],\n    totalCount: 0\n};\n\n/*\n * reducer\n */\nexport default function repoSearching(state = repoSearchingState, action) {\n    switch (action.type) {\n        case RESET_REPO_SEARCHING_DEFAULT: {\n            const newState = {\n                ...state,\n                isFetchingMaskVisible: false,\n                isLoading: false,\n                keyword: '',\n                pageSize: DEFAULT_PAGE_SIZE,\n                repoList: [],\n                totalCount: 0\n            };\n            return newState;\n        }\n        case UPDATE_FETCHING_MASK: {\n            const newState = {\n                ...state,\n                isFetchingMaskVisible: action.payload\n            };\n            return newState;\n        }\n        case UPDATE_KEYWORD: {\n            const newState = {\n                ...state,\n                keyword: action.payload\n            };\n            return newState;\n        }\n        case UPDATE_LOADING_FLAG: {\n            const newState = {\n                ...state,\n                isLoading: action.payload\n            };\n            return newState;\n        }\n        case UPDATE_PAGE_SIZE: {\n            const newState = {\n                ...state,\n                pageSize: action.payload\n            };\n            return newState;\n        }\n        case UPDATE_REPO_LIST: {\n            const newState = {\n                ...state,\n                repoList: action.payload\n            };\n            return newState;\n        }\n        case UPDATE_TOTAL_COUNT: {\n            const newState = {\n                ...state,\n                totalCount: action.payload\n            };\n            return newState;\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\n/*\n * action creators\n */\nexport const fetchRepoData = createAction(FETCH_REPO_DATA);\nexport const getRepoData = createAction(GET_REPO_DATA);\nexport const resetRepoSearchingDefault = createAction(\n    RESET_REPO_SEARCHING_DEFAULT\n);\nexport const searchRepoData = createAction(SEARCH_REPO_DATA);\nexport const updateFetchingMask = createAction(UPDATE_FETCHING_MASK);\nexport const updateKeyword = createAction(UPDATE_KEYWORD);\nexport const updateLoadingFlag = createAction(UPDATE_LOADING_FLAG);\nexport const updatePageSize = createAction(UPDATE_PAGE_SIZE);\nexport const updateRepoList = createAction(UPDATE_REPO_LIST);\nexport const updateTotalCount = createAction(UPDATE_TOTAL_COUNT);\n\nexport const getRepoDataEpic = action$ =>\n    action$.pipe(\n        ofType(GET_REPO_DATA),\n        exhaustMap(action =>\n            concat(\n                of({ type: UPDATE_LOADING_FLAG, payload: true }),\n                from(\n                    _get(GET_REPO_LSIT, {\n                        q: store.getState().repoSearching.keyword,\n                        page:\n                            action.payload.page ||\n                            store.getState().repoSearching.repoList.length /\n                                store.getState().repoSearching.pageSize +\n                                1,\n                        per_page:\n                            action.payload.per_page ||\n                            store.getState().repoSearching.pageSize\n                    })\n                ).pipe(\n                    switchMap(response =>\n                        concat(\n                            of({\n                                type: UPDATE_REPO_LIST,\n                                payload: store\n                                    .getState()\n                                    .repoSearching.repoList.concat(\n                                        response.data.items\n                                    )\n                            }),\n                            of({\n                                type: UPDATE_TOTAL_COUNT,\n                                payload: response.data.total_count\n                            }),\n                            of({ type: UPDATE_FETCHING_MASK, payload: false }),\n                            of({ type: UPDATE_LOADING_FLAG, payload: false })\n                        )\n                    ),\n                    catchError(error =>\n                        of({ type: UPDATE_LOADING_FLAG, payload: false })\n                    )\n                )\n            )\n        )\n    );\n\nexport const searchRepoDataEpic = action$ =>\n    action$.pipe(\n        ofType(SEARCH_REPO_DATA),\n        switchMap(action =>\n            concat(\n                of({ type: UPDATE_LOADING_FLAG, payload: true }),\n                of({ type: UPDATE_TOTAL_COUNT, payload: 0 }),\n                of({ type: UPDATE_KEYWORD, payload: action.payload.keyword }),\n                of({ type: UPDATE_REPO_LIST, payload: [] }),\n                of({\n                    type: GET_REPO_DATA,\n                    payload: {\n                        page: 1\n                    }\n                })\n            )\n        )\n    );\n","import { combineEpics } from 'redux-observable';\nimport { combineReducers } from 'redux';\nimport repoSearching, {\n    getRepoDataEpic,\n    searchRepoDataEpic\n} from './repoSearching';\n\nexport const rootEpic = combineEpics(getRepoDataEpic, searchRepoDataEpic);\n\nconst appReducer = combineReducers({\n    repoSearching\n});\n\nexport const rootReducer = (state, action) => {\n    let newStata;\n    if (action.type !== 'INITIAL_ALL_STATE') {\n        newStata = state;\n    }\n\n    return appReducer(newStata, action);\n};\n","import logger from 'redux-logger';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { rootEpic, rootReducer } from './modules/root';\n\nconst epicMiddleware = createEpicMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst middleware = applyMiddleware(epicMiddleware, logger);\n\nconst store = createStore(rootReducer, composeEnhancers(middleware));\n\nepicMiddleware.run(rootEpic);\n\nexport default store;\n","export const parseNumberwithCommas = num => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n","import styled from 'styled-components';\nimport { DebounceInput } from 'react-debounce-input';\n\nconst StyledDebounceInput = styled(DebounceInput)`\n    width: 100%;\n    height: 36px;\n    padding: 5px 12px;\n    font-size: 13px;\n    color: #fff;\n    background-color: hsla(0, 0%, 100%, 0.125);\n    background-image: none;\n    border: 0px;\n    border-radius: 3px;\n\n    &:focus {\n        background-color: #fff;\n        color: #222;\n        transition: border-color 0.2s linear 0s;\n        outline: none;\n    }\n\n    &:disabled {\n        background-color: #dddddd;\n        opacity: 0.5;\n        cursor: not-allowed;\n    }\n\n    &:focus {\n        outline: none;\n        border-color: #0096cc;\n    }\n\n    &::placeholder {\n        color: #bbb;\n    }\n\n    /* Chrome/Opera/Safari */\n    &::-webkit-input-placeholder {\n        color: #bbb;\n    }\n\n    /* Firefox 19+ */\n    &::-moz-placeholder {\n        color: #bbb;\n    }\n\n    /* IE 10+ */\n    &:-ms-input-placeholder {\n        color: #bbb;\n    }\n\n    /* Firefox 18- */\n    &:-moz-placeholder {\n        color: #bbb;\n    }\n`;\n\nexport default StyledDebounceInput;\n","import styled from 'styled-components';\n\nexport const H1 = styled.h1`\n    margin: 0px;\n    font-size: 30px;\n`;\n\nexport const H2 = styled.h2`\n    margin: 0px;\n    font-size: 24px;\n`;\n\nexport const H3 = styled.h3`\n    margin: 0px;\n    font-size: 20px;\n    font-weight: 600;\n`;\n\nexport const H4 = styled.h4`\n    margin: 0px;\n    font-size: 16px;\n    font-weight: 600;\n`;\n","import styled from 'styled-components';\nimport DebounceInput from 'components/DebounceInput';\nimport { H3 } from 'components/typography';\n\nexport const HeaderWrapper = styled.header`\n    display: flex;\n    justify-content: space-between;\n    height: 52px;\n    padding: 8px 15vw;\n    background-color: #24292e;\n\n    @media screen and (min-width: 1020px) and (max-width: 1200px) {\n        padding-left: 10vw;\n        padding-right: 10vw;\n    }\n\n    @media screen and (max-width: 1019px) {\n        padding-left: 5vw;\n        padding-right: 5vw;\n    }\n`;\n\nexport const TotalCount = styled(H3)`\n    flex: 1 0 auto;\n    color: #fff;\n    margin-left: 12px;\n    line-height: 36px;\n\n    @media screen and (max-width: 959px) {\n        display: none;\n    }\n`;\n\nexport const StyledDebounceInput = styled(DebounceInput)`\n    transition: width 0.35s;\n\n    @media screen and (max-width: 1200px) {\n        max-width: calc(100% - 44px);\n    }\n`;\n\nexport const HeaderAnchor = styled.a`\n    margin-right: 24px;\n\n    @media screen and (max-width: 1200px) {\n        margin-right: 12px;\n    }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { SEARCH_REPO_DATA } from 'store/modules/repoSearching';\nimport { parseNumberwithCommas } from 'utils/helper';\nimport {\n    HeaderWrapper,\n    TotalCount,\n    StyledDebounceInput,\n    HeaderAnchor\n} from './HeaderStyledComps';\n\nconst Header = () => {\n    const keyword = useSelector(state => state.repoSearching.keyword);\n    const totalCount = useSelector(state => state.repoSearching.totalCount);\n    const dispatch = useDispatch();\n    const onSearchInputChange = keyword => {\n        dispatch({\n            type: SEARCH_REPO_DATA,\n            payload: { keyword }\n        });\n    };\n    return (\n        <HeaderWrapper className=\"flex flex-justify-between\">\n            <div className=\"flex flex-justify-between\">\n                <HeaderAnchor href=\"https://github.com/\">\n                    <FontAwesomeIcon\n                        icon={faGithub}\n                        color=\"#fff\"\n                        style={{\n                            fontSize: '36px'\n                        }}\n                    />\n                </HeaderAnchor>\n                <StyledDebounceInput\n                    minLength={2}\n                    placeholder=\"Search\"\n                    debounceTimeout={300}\n                    onChange={e => onSearchInputChange(e.target.value)}\n                />\n            </div>\n            {keyword !== '' && (\n                <TotalCount>\n                    {totalCount > 1\n                        ? `${parseNumberwithCommas(totalCount)} repositories`\n                        : `${parseNumberwithCommas(totalCount)} repository`}\n                </TotalCount>\n            )}\n        </HeaderWrapper>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledLoader = styled.div`\n    margin-top: -22px;\n    font-size: 10px;\n    position: relative;\n    text-indent: -9999em;\n    border-top: 2px solid rgba(255, 255, 255, 0.2);\n    border-right: 2px solid rgba(255, 255, 255, 0.2);\n    border-bottom: 2px solid rgba(255, 255, 255, 0.2);\n    border-left: 2px solid #555;\n    -webkit-transform: translateZ(0);\n    -ms-transform: translateZ(0);\n    transform: translateZ(0);\n    -webkit-animation: load8 1.1s infinite linear;\n    animation: load8 1.1s infinite linear;\n\n    &,\n    &:after {\n        border-radius: 50%;\n        width: 44px;\n        height: 44px;\n    }\n    @-webkit-keyframes load8 {\n        0% {\n            -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n        }\n        100% {\n            -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n        }\n    }\n    @keyframes load8 {\n        0% {\n            -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n        }\n        100% {\n            -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n        }\n    }\n`;\n\nconst Loader = ({ className, ...props }) => {\n    return <StyledLoader className={className} />;\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const SearchResultsWrapper = styled.section`\n    flex: 1;\n`;\n\nexport const SearchItem = styled.div`\n    padding: 0 15vw 24px 15vw;\n\n    @media screen and (min-width: 1020px) and (max-width: 1200px) {\n        padding: 5px 10vw;\n    }\n\n    @media screen and (max-width: 1019px) {\n        padding: 5px 5vw;\n    }\n`;\n\nexport const Hr = styled.hr`\n    margin: 0;\n    margin-bottom: 24px;\n    border: none;\n    border-top: ${props =>\n        props.index !== 0 ? '1px solid #e1e4e8' : '1px solid transparent'};\n`;\n\nexport const Anchor = styled.a`\n    max-width: 100%;\n    color: #0366d6;\n    text-decoration: none;\n\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\nexport const Paragraph = styled.p`\n    width: 100%;\n    color: #586069;\n    margin: 0px;\n`;\n\nexport const FetchingMask = styled.div`\n    position: absolute;\n    top: 0px;\n    right: 0px;\n    bottom: 0px;\n    left: 0px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: rgba(0, 0, 0, 0.4);\n    color: #24292e;\n    font-size: 24px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEmpty from 'lodash/isEmpty';\nimport { H3 } from 'components/typography';\nimport { Hr, SearchItem, Anchor, Paragraph } from './SearchResultStyledComps';\n\nconst ListItem = ({ data, index, style }) => {\n    const { repoList } = data;\n    const rowData = repoList[index];\n    if (!rowData || _isEmpty(rowData)) {\n        return null;\n    }\n    return (\n        <SearchItem key={rowData.id} style={style}>\n            <Hr index={index} />\n            <H3>\n                <Anchor\n                    href={rowData.html_url}\n                    className=\"text-overflow-ellipsis\"\n                >\n                    {`${rowData.owner.login}/`}\n                    <em>{rowData.name}</em>\n                </Anchor>\n            </H3>\n            <Paragraph className=\"text-overflow-ellipsis\">\n                {rowData.description}\n            </Paragraph>\n        </SearchItem>\n    );\n};\n\nListItem.propTypes = {\n    data: PropTypes.object.isRequired,\n    index: PropTypes.number.isRequired,\n    style: PropTypes.object.isRequired\n};\n\nexport default ListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FixedSizeList as List } from 'react-window';\nimport _debounce from 'lodash/debounce';\nimport { ITEM_SIZE } from 'config/repoSearching';\nimport {\n    GET_REPO_DATA,\n    UPDATE_FETCHING_MASK\n} from 'store/modules/repoSearching';\nimport ListItem from './ListItem';\n\nconst onScroll = ({\n    allDataLoaded,\n    onFetchNextPage,\n    pageSize,\n    repoLength,\n    scrollDirection,\n    scrollOffset,\n    scrollUpdateWasRequested,\n    updateFetchingMask\n}) => {\n    if (scrollDirection === 'backward' || allDataLoaded) {\n        return;\n    }\n\n    const offsetIndex = Math.ceil(scrollOffset / ITEM_SIZE);\n\n    if (offsetIndex > repoLength - (pageSize / 15) * 3) {\n        updateFetchingMask(true);\n    }\n\n    if (repoLength - offsetIndex < pageSize) {\n        onFetchNextPage();\n    }\n};\n\nconst InfiniteList = ({ height, itemSize, repoList, totalCount, width }) => {\n    const pageSize = useSelector(state => state.repoSearching.pageSize);\n    const keyword = useSelector(state => state.repoSearching.keyword);\n    const dispatch = useDispatch();\n    const onFetchNextPage = () => {\n        dispatch({\n            type: GET_REPO_DATA,\n            payload: { keyword: keyword }\n        });\n    };\n    const updateFetchingMask = state => {\n        dispatch({\n            type: UPDATE_FETCHING_MASK,\n            payload: state\n        });\n    };\n    const allDataLoaded = repoList.length === totalCount;\n    return (\n        <List\n            height={height}\n            itemCount={totalCount}\n            itemData={{\n                repoList\n            }}\n            itemSize={ITEM_SIZE}\n            onScroll={_debounce(\n                ({ ...props }) =>\n                    onScroll({\n                        ...props,\n                        allDataLoaded,\n                        onFetchNextPage,\n                        updateFetchingMask,\n                        pageSize: pageSize,\n                        repoLength: repoList.length\n                    }),\n                300\n            )}\n            overscanCount={20}\n            width={width}\n        >\n            {ListItem}\n        </List>\n    );\n};\n\nInfiniteList.propTypes = {\n    height: PropTypes.number.isRequired,\n    itemSize: PropTypes.number.isRequired,\n    repoList: PropTypes.array.isRequired,\n    totalCount: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default InfiniteList;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport Loader from 'components/Loader';\nimport { ITEM_SIZE } from 'config/repoSearching';\nimport { UPDATE_PAGE_SIZE } from 'store/modules/repoSearching';\nimport InfiniteList from './InfiniteList';\nimport { FetchingMask, SearchResultsWrapper } from './SearchResultStyledComps';\n\nconst SearchResults = () => {\n    const isFetchingMaskVisible = useSelector(\n        state => state.repoSearching.isFetchingMaskVisible\n    );\n    const isLoading = useSelector(state => state.repoSearching.isLoading);\n    const keyword = useSelector(state => state.repoSearching.keyword);\n    const repoList = useSelector(state => state.repoSearching.repoList);\n    const totalCount = useSelector(state => state.repoSearching.totalCount);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const wrapperHeight = document.querySelector('.infinite-list')\n            .offsetHeight;\n\n        dispatch({\n            type: UPDATE_PAGE_SIZE,\n            payload: Math.ceil(wrapperHeight / ITEM_SIZE) * 15\n        });\n    }, [dispatch]);\n\n    const isValidContent = totalCount !== 0;\n    const searchResultsWrapperClass = classNames({\n        'infinite-list': true,\n        'position-middle-container': !isValidContent\n    });\n\n    return (\n        <SearchResultsWrapper className={searchResultsWrapperClass}>\n            {isLoading && !isValidContent && (\n                <Loader className=\"position-middle-content\" />\n            )}\n            {!isLoading && keyword !== '' && !isValidContent && (\n                <div className=\"position-middle-content\">No repo found</div>\n            )}\n            {!isLoading && keyword === '' && !isValidContent && (\n                <div className=\"position-middle-content\">\n                    Input keyword to search repository\n                </div>\n            )}\n            {isValidContent && (\n                <AutoSizer>\n                    {({ width, height }) => {\n                        if (width === 0 || height === 0) {\n                            return null;\n                        }\n\n                        return (\n                            <InfiniteList\n                                height={height}\n                                itemSize={ITEM_SIZE}\n                                repoList={repoList}\n                                totalCount={\n                                    totalCount > 1000 ? 1000 : totalCount\n                                }\n                                width={width}\n                            />\n                        );\n                    }}\n                </AutoSizer>\n            )}\n            {isValidContent && isFetchingMaskVisible && (\n                <FetchingMask>\n                    Scroll too fast... The API is still fetching...\n                </FetchingMask>\n            )}\n        </SearchResultsWrapper>\n    );\n};\n\nexport default SearchResults;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from 'store/configureStore';\nimport Header from './Header/Header';\nimport SearchResults from './SearchResults/SearchResults';\n\nconst App = () => (\n    <Provider store={store}>\n        <main>\n            <Header />\n            <SearchResults />\n        </main>\n    </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}